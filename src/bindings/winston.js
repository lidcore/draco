// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE
'use strict';

var Winston = require("winston");
var Env$LidcoreDraco = require("../lib/env.js");
var Os$LidcoreBsNode = require("@lidcore/bs-node/src/os.js");
var Url$LidcoreBsNode = require("@lidcore/bs-node/src/url.js");
var Firebase$LidcoreDraco = require("./firebase.js");


require('winston-papertrail').Papertrail

;

var dummy_logger = (
  {info: function () {},
   error: function () {}}
);

function setup(url) {
  var url$1 = Url$LidcoreBsNode.parse(url);
  var hostname = Firebase$LidcoreDraco.Functions[/* running */0] ? Env$LidcoreDraco.get(undefined, "FUNCTION_NAME") : Os$LidcoreBsNode.hostname(/* () */0);
  var logFormat = function (level, msg) {
    return "[" + (String(hostname) + ("] " + (String(level) + (" " + (String(msg) + "")))));
  };
  var papertrail = new (Winston.transports.Papertrail)({
        host: url$1.hostname,
        port: url$1.port,
        hostname: "decode-" + (String(Env$LidcoreDraco.stage) + ""),
        logFormat: logFormat
      });
  return new Winston.Logger({
              transports: /* array */[papertrail]
            });
}

var match = Firebase$LidcoreDraco.Functions[/* running */0];

var match$1 = Env$LidcoreDraco.get_some(undefined, "PAPERTRAIL_URL");

var logger = match || match$1 === undefined ? dummy_logger : setup(match$1);

function info(s) {
  logger.info(s);
  return /* () */0;
}

function error(s) {
  logger.error(s);
  return /* () */0;
}

exports.info = info;
exports.error = error;
/*  Not a pure module */
