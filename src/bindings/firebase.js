// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Env$LidcoreDraco = require("../lib/env.js");
var Utils$LidcoreDraco = require("../lib/utils.js");
var Buffer$LidcoreBsNode = require("@lidcore/bs-node/src/buffer.js");

var loadFunctions = function (){require("firebase-functions")};

var initApp = function (){require("firebase-admin").initializeApp()};

var match = Env$LidcoreDraco.get_some(undefined, "DRACO_FIREBASE");

var running = match !== undefined;

if (running) {
  loadFunctions();
  initApp();
}

var https = function (){return require("firebase-functions").https};

function from_express(app) {
  return https().onRequest(app);
}

var pubsub = function (){return require("firebase-functions").pubsub};

function on_publish(name, handler) {
  return pubsub().topic(name).onPublish(handler);
}

function json(message) {
  return Curry._1(Utils$LidcoreDraco.Json[/* parse */0], Buffer$LidcoreBsNode.toString(undefined, undefined, undefined, Buffer$LidcoreBsNode.from("base64", message.data)));
}

var Functions_001 = [from_express];

var Functions_002 = [
  on_publish,
  json
];

var Functions = [
  running,
  Functions_001,
  Functions_002
];

exports.Functions = Functions;
/* match Not a pure module */
